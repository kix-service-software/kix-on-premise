services:
  proxy:
    image: ${REGISTRY}/proxy:${IMAGE_TAG}
    depends_on:
      - backend
      - frontend
    ports:
      - ${FRONTEND_PORT:-80}:80
      - ${BACKEND_PORT:-8080}:8080
      - ${SSP_PORT:-9080}:9080
      - ${FRONTEND_PORT_SSL:-443}:443
      - ${BACKEND_PORT_SSL:-8443}:8443
      - ${SSP_PORT_SSL:-9443}:9443
    env_file:
      - environment
    volumes:
      - ./proxy/ssl:/etc/nginx/conf.d/ssl
      - ./proxy/non-ssl.conf:/etc/nginx/conf.d/non-ssl.conf
      - ./proxy/ssl.conf:/etc/nginx/conf.d/ssl.conf
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    restart: on-failure

  backend:
    image: ${REGISTRY}/backend:${IMAGE_TAG}
    user: "110010100"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - environment
    volumes:
      - ./backend:/opt/kix/conf.d
      - shared:/mnt/shared
      - backend:/mnt/data
    logging:
      options:
        max-size: "100m"
        max-file: "5"
    restart: on-failure
    stop_grace_period: ${STOP_GRACE_PERIOD:-60s}

  frontend:
    image: ${REGISTRY}/frontend:${IMAGE_TAG}
    user: "110010100"
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - USE_SSL=0
      - REDIS_CACHE_HOST=redis
      - FRONTEND_CLIENT_ID=kix-agent-frontend
      - FRONTEND_NOTIFICATION_ID=kix-agent-frontend
      - NOTIFICATION_URL=http://frontend:3000/notifications
      - BACKEND_API_URL=http://backend:8080/api/v1
    env_file:
      - environment
    volumes:
      - shared:/mnt/shared
      - frontend:/mnt/data
    logging:
      options:
        max-size: "100m"
    restart: on-failure
    stop_grace_period: ${STOP_GRACE_PERIOD:-60s}

  db:
    image: ${REGISTRY}/db:${IMAGE_TAG}
    hostname: db
    command: [ "postgres", "-c", "config_file=/etc/postgresql.conf" ]
    env_file:
      - environment
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/postgresql.conf:/etc/postgresql.conf
    shm_size: '2gb'
    restart: on-failure
    stop_grace_period: ${STOP_GRACE_PERIOD:-60s}


  redis:
    image: ${REGISTRY}/redis:${IMAGE_TAG}
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: on-failure

volumes:
  shared:
  db:
  backend:
  frontend:
